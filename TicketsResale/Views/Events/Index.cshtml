@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@model IEnumerable<TicketsResale.Business.Models.EventCategory>

<h1>@localizer["Events"]</h1>

<div class="container-fluid">

    <ul class="nav nav-tabs">
        <li class="nav-item">
            <ul class="nav nav-tabs bg-dark">
                <li class="nav-item">
                    <a class="nav-link text-light" asp-action="CreateTicket" asp-controller="Tickets">
                        Create new ticket
                    </a>
                </li>
            </ul>
        </li>
        <p></p>
        <li class="nav-item">
              @localizer["Categories"]
            <select id="category">
                @foreach (var category in Model)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>

        </li>

    </ul>
    <p> </p>
    <div id="eventsItems" class="row row-cols-2">
        
     </div>
</div>
</div>
@section Scripts
{
    <script>
        const filters = {
            categories: [],
            page: 1,
            pageSize: 5,
            sortBy: "Date",
            sortOrder: "Ascending"
        };
        

        function createItem(item) {
            return `<div class="col-sm-6">
                        <div class="card text-center">
                            <img src="/img/${item.banner}" alt="${item.name}" class="card-img-top img-fluid" />
                            <div class="card-body">
                                <h4><strong>${item.name}</strong></h4>
                                <h4>Item city name<strong>${item.name}</strong></h4>
                                <h4>@localizer["Venue"] name: ${item.name}</h4>
                                <p><strong>${item.date}</strong></p>
                                <p class="text-justify">${item.description})</p>
                                <a href="#">Buy ticket</a>
                            </div>
                        </div>
                    </div>`;
        };
        $(document).ready(function() {
            $("#category").on("change", function () {
                filters.categories = $(this).val();
                getEvents();
            });
        });

        function getEvents() {
            $.get(`api/v1/events`, filters, function (data) {
                $("#eventsItems").empty().append($.map(data, createItem));
            });
        };
        
    </script>
}


